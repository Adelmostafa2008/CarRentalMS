// <auto-generated />
using System;
using Car_Rental_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Car_Rental_Management_System.Migrations
{
    [DbContext(typeof(AppDb))]
    partial class AppDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Car_Rental_Management_System.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("branch");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            City = "Giza",
                            Name = "AutoFleet Giza"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 25,
                            City = "Cairo",
                            Name = "AutoFleet Cairo"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 15,
                            City = "Alexandria",
                            Name = "AutoFleet Alexandria"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 10,
                            City = "Mansoura",
                            Name = "AutoFleet Mansoura"
                        });
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("PlateNumber")
                        .IsUnique();

                    b.ToTable("car");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchId = 1,
                            Brand = "Toyota",
                            DailyRate = 700m,
                            Model = "Corolla",
                            PlateNumber = "GYZ1234",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 2,
                            BranchId = 2,
                            Brand = "Honda",
                            DailyRate = 750m,
                            Model = "Civic",
                            PlateNumber = "CAI4567",
                            Status = "Rented"
                        },
                        new
                        {
                            Id = 3,
                            BranchId = 3,
                            Brand = "Hyundai",
                            DailyRate = 650m,
                            Model = "Elantra",
                            PlateNumber = "ALX8901",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 4,
                            BranchId = 2,
                            Brand = "Tesla",
                            DailyRate = 1500m,
                            Model = "Model 3",
                            PlateNumber = "CAI2222",
                            Status = "Maintenance"
                        },
                        new
                        {
                            Id = 5,
                            BranchId = 1,
                            Brand = "Toyota",
                            DailyRate = 900m,
                            Model = "Camry",
                            PlateNumber = "GYZ7777",
                            Status = "Rented"
                        },
                        new
                        {
                            Id = 6,
                            BranchId = 4,
                            Brand = "Ford",
                            DailyRate = 600m,
                            Model = "Focus",
                            PlateNumber = "MAN1100",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 7,
                            BranchId = 3,
                            Brand = "BMW",
                            DailyRate = 1300m,
                            Model = "X5",
                            PlateNumber = "ALX5500",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 8,
                            BranchId = 2,
                            Brand = "Nissan",
                            DailyRate = 680m,
                            Model = "Kicks",
                            PlateNumber = "CAI9090",
                            Status = "Rented"
                        },
                        new
                        {
                            Id = 9,
                            BranchId = 1,
                            Brand = "Hyundai",
                            DailyRate = 850m,
                            Model = "Sonata",
                            PlateNumber = "GYZ2244",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 10,
                            BranchId = 4,
                            Brand = "Mazda",
                            DailyRate = 950m,
                            Model = "CX-5",
                            PlateNumber = "MAN3344",
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ahmed.hassan@example.com",
                            Name = "Ahmed Hassan",
                            Phone = "01012345678"
                        },
                        new
                        {
                            Id = 2,
                            Email = "mona.ali@example.com",
                            Name = "Mona Ali",
                            Phone = "01122334455"
                        },
                        new
                        {
                            Id = 3,
                            Email = "khaled.youssef@example.com",
                            Name = "Khaled Youssef",
                            Phone = "01099887766"
                        },
                        new
                        {
                            Id = 4,
                            Email = "sara.ibrahim@example.com",
                            Name = "Sara Ibrahim",
                            Phone = "01233445566"
                        },
                        new
                        {
                            Id = 5,
                            Email = "youssef.adel@example.com",
                            Name = "Youssef Adel",
                            Phone = "01077665544"
                        },
                        new
                        {
                            Id = 6,
                            Email = "omar.elsayed@example.com",
                            Name = "Omar Elsayed",
                            Phone = "01166778899"
                        },
                        new
                        {
                            Id = 7,
                            Email = "heba.mohamed@example.com",
                            Name = "Heba Mohamed",
                            Phone = "01088997766"
                        },
                        new
                        {
                            Id = 8,
                            Email = "tarek.samir@example.com",
                            Name = "Tarek Samir",
                            Phone = "01299001122"
                        },
                        new
                        {
                            Id = 9,
                            Email = "laila.magdy@example.com",
                            Name = "Laila Magdy",
                            Phone = "01155002233"
                        },
                        new
                        {
                            Id = 10,
                            Email = "mahmoud.nabil@example.com",
                            Name = "Mahmoud Nabil",
                            Phone = "01077001122"
                        });
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.CustomerProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LicenseExpiry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.HasIndex("LicenseNumber")
                        .IsUnique();

                    b.ToTable("customerProfile");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Giza, El Haram",
                            CustomerId = 1,
                            LicenseExpiry = new DateTime(2027, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L12345"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Nasr City, Cairo",
                            CustomerId = 2,
                            LicenseExpiry = new DateTime(2026, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L22346"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Smouha, Alexandria",
                            CustomerId = 3,
                            LicenseExpiry = new DateTime(2028, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L32347"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Zamalek, Cairo",
                            CustomerId = 4,
                            LicenseExpiry = new DateTime(2029, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L42348"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Dokki, Giza",
                            CustomerId = 5,
                            LicenseExpiry = new DateTime(2027, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L52349"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Mansoura, Dakahlia",
                            CustomerId = 6,
                            LicenseExpiry = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L62350"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Cairo, Maadi",
                            CustomerId = 7,
                            LicenseExpiry = new DateTime(2028, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L72351"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Alexandria, Montaza",
                            CustomerId = 8,
                            LicenseExpiry = new DateTime(2029, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L82352"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Cairo, Shoubra",
                            CustomerId = 9,
                            LicenseExpiry = new DateTime(2026, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L92353"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Giza, Faisal",
                            CustomerId = 10,
                            LicenseExpiry = new DateTime(2027, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenseNumber = "L10354"
                        });
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.MaintenanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("maintenanceRecord");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 4,
                            Cost = 4500m,
                            Date = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Battery replacement"
                        },
                        new
                        {
                            Id = 2,
                            CarId = 4,
                            Cost = 900m,
                            Date = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tire alignment"
                        },
                        new
                        {
                            Id = 3,
                            CarId = 2,
                            Cost = 700m,
                            Date = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oil change"
                        },
                        new
                        {
                            Id = 4,
                            CarId = 8,
                            Cost = 2500m,
                            Date = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Brake pads replacement"
                        },
                        new
                        {
                            Id = 5,
                            CarId = 7,
                            Cost = 3500m,
                            Date = new DateTime(2025, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AC system repair"
                        },
                        new
                        {
                            Id = 6,
                            CarId = 3,
                            Cost = 2700m,
                            Date = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Engine tuning"
                        });
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.RentalTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("rentalTransaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 2,
                            CustomerId = 1,
                            EndDate = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 2,
                            CarId = 5,
                            CustomerId = 2,
                            EndDate = new DateTime(2025, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            Id = 3,
                            CarId = 8,
                            CustomerId = 3,
                            EndDate = new DateTime(2025, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 4,
                            CarId = 1,
                            CustomerId = 4,
                            EndDate = new DateTime(2025, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Canceled"
                        },
                        new
                        {
                            Id = 5,
                            CarId = 7,
                            CustomerId = 5,
                            EndDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            Id = 6,
                            CarId = 3,
                            CustomerId = 6,
                            EndDate = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            CarId = 6,
                            CustomerId = 7,
                            EndDate = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            Id = 8,
                            CarId = 9,
                            CustomerId = 8,
                            EndDate = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 9,
                            CarId = 10,
                            CustomerId = 9,
                            EndDate = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 10,
                            CarId = 4,
                            CustomerId = 10,
                            EndDate = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.Car", b =>
                {
                    b.HasOne("Car_Rental_Management_System.Models.Branch", "branch")
                        .WithMany("cars")
                        .HasForeignKey("BranchId");

                    b.Navigation("branch");
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.CustomerProfile", b =>
                {
                    b.HasOne("Car_Rental_Management_System.Models.Customer", "customer")
                        .WithOne("customerProfile")
                        .HasForeignKey("Car_Rental_Management_System.Models.CustomerProfile", "CustomerId");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.MaintenanceRecord", b =>
                {
                    b.HasOne("Car_Rental_Management_System.Models.Car", "car")
                        .WithMany("MaintenanceRecord")
                        .HasForeignKey("CarId");

                    b.Navigation("car");
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.RentalTransaction", b =>
                {
                    b.HasOne("Car_Rental_Management_System.Models.Car", "car")
                        .WithMany("rentalTransactions")
                        .HasForeignKey("CarId");

                    b.HasOne("Car_Rental_Management_System.Models.Customer", "customer")
                        .WithMany("rentalTransactions")
                        .HasForeignKey("CustomerId");

                    b.Navigation("car");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.Branch", b =>
                {
                    b.Navigation("cars");
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.Car", b =>
                {
                    b.Navigation("MaintenanceRecord");

                    b.Navigation("rentalTransactions");
                });

            modelBuilder.Entity("Car_Rental_Management_System.Models.Customer", b =>
                {
                    b.Navigation("customerProfile");

                    b.Navigation("rentalTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
